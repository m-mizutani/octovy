// Code generated by entc, DO NOT EDIT.

package repolabel

const (
	// Label holds the string label denoting the repolabel type in the database.
	Label = "repo_label"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldColor holds the string denoting the color field in the database.
	FieldColor = "color"
	// EdgeRepos holds the string denoting the repos edge name in mutations.
	EdgeRepos = "repos"
	// Table holds the table name of the repolabel in the database.
	Table = "repo_labels"
	// ReposTable is the table that holds the repos relation/edge. The primary key declared below.
	ReposTable = "repository_labels"
	// ReposInverseTable is the table name for the Repository entity.
	// It exists in this package in order to avoid circular dependency with the "repository" package.
	ReposInverseTable = "repositories"
)

// Columns holds all SQL columns for repolabel fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDescription,
	FieldColor,
}

var (
	// ReposPrimaryKey and ReposColumn2 are the table columns denoting the
	// primary key for the repos relation (M2M).
	ReposPrimaryKey = []string{"repository_id", "repo_label_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
