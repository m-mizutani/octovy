// Code generated by entc, DO NOT EDIT.

package report

const (
	// Label holds the string label denoting the report type in the database.
	Label = "report"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldScanner holds the string denoting the scanner field in the database.
	FieldScanner = "scanner"
	// FieldResourceType holds the string denoting the resource_type field in the database.
	FieldResourceType = "resource_type"
	// FieldResourceName holds the string denoting the resource_name field in the database.
	FieldResourceName = "resource_name"
	// FieldScannedAt holds the string denoting the scanned_at field in the database.
	FieldScannedAt = "scanned_at"
	// FieldRequestedAt holds the string denoting the requested_at field in the database.
	FieldRequestedAt = "requested_at"
	// EdgeObjects holds the string denoting the objects edge name in mutations.
	EdgeObjects = "objects"
	// EdgeRepository holds the string denoting the repository edge name in mutations.
	EdgeRepository = "repository"
	// Table holds the table name of the report in the database.
	Table = "reports"
	// ObjectsTable is the table that holds the objects relation/edge. The primary key declared below.
	ObjectsTable = "report_objects"
	// ObjectsInverseTable is the table name for the Object entity.
	// It exists in this package in order to avoid circular dependency with the "object" package.
	ObjectsInverseTable = "objects"
	// RepositoryTable is the table that holds the repository relation/edge. The primary key declared below.
	RepositoryTable = "repository_report"
	// RepositoryInverseTable is the table name for the Repository entity.
	// It exists in this package in order to avoid circular dependency with the "repository" package.
	RepositoryInverseTable = "repositories"
)

// Columns holds all SQL columns for report fields.
var Columns = []string{
	FieldID,
	FieldScanner,
	FieldResourceType,
	FieldResourceName,
	FieldScannedAt,
	FieldRequestedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "reports"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"repository_latest_report",
}

var (
	// ObjectsPrimaryKey and ObjectsColumn2 are the table columns denoting the
	// primary key for the objects relation (M2M).
	ObjectsPrimaryKey = []string{"report_id", "object_id"}
	// RepositoryPrimaryKey and RepositoryColumn2 are the table columns denoting the
	// primary key for the repository relation (M2M).
	RepositoryPrimaryKey = []string{"repository_id", "report_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
