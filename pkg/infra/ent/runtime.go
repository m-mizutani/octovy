// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/m-mizutani/octovy/pkg/domain/schema"
	"github.com/m-mizutani/octovy/pkg/infra/ent/session"
	"github.com/m-mizutani/octovy/pkg/infra/ent/severity"
	"github.com/m-mizutani/octovy/pkg/infra/ent/vulnerability"
	"github.com/m-mizutani/octovy/pkg/infra/ent/vulnstatusindex"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescToken is the schema descriptor for token field.
	sessionDescToken := sessionFields[2].Descriptor()
	// session.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	session.TokenValidator = sessionDescToken.Validators[0].(func(string) error)
	severityFields := schema.Severity{}.Fields()
	_ = severityFields
	// severityDescLabel is the schema descriptor for label field.
	severityDescLabel := severityFields[0].Descriptor()
	// severity.LabelValidator is a validator for the "label" field. It is called by the builders before save.
	severity.LabelValidator = severityDescLabel.Validators[0].(func(string) error)
	vulnstatusindexFields := schema.VulnStatusIndex{}.Fields()
	_ = vulnstatusindexFields
	// vulnstatusindexDescID is the schema descriptor for id field.
	vulnstatusindexDescID := vulnstatusindexFields[0].Descriptor()
	// vulnstatusindex.IDValidator is a validator for the "id" field. It is called by the builders before save.
	vulnstatusindex.IDValidator = vulnstatusindexDescID.Validators[0].(func(string) error)
	vulnerabilityFields := schema.Vulnerability{}.Fields()
	_ = vulnerabilityFields
	// vulnerabilityDescID is the schema descriptor for id field.
	vulnerabilityDescID := vulnerabilityFields[0].Descriptor()
	// vulnerability.IDValidator is a validator for the "id" field. It is called by the builders before save.
	vulnerability.IDValidator = vulnerabilityDescID.Validators[0].(func(string) error)
}
