// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLogin holds the string denoting the login field in the database.
	FieldLogin = "login"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAvatarURL holds the string denoting the avatar_url field in the database.
	FieldAvatarURL = "avatar_url"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// EdgeEditedStatus holds the string denoting the edited_status edge name in mutations.
	EdgeEditedStatus = "edited_status"
	// Table holds the table name of the user in the database.
	Table = "users"
	// EditedStatusTable is the table that holds the edited_status relation/edge.
	EditedStatusTable = "vuln_status"
	// EditedStatusInverseTable is the table name for the VulnStatus entity.
	// It exists in this package in order to avoid circular dependency with the "vulnstatus" package.
	EditedStatusInverseTable = "vuln_status"
	// EditedStatusColumn is the table column denoting the edited_status relation/edge.
	EditedStatusColumn = "user_edited_status"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldLogin,
	FieldName,
	FieldAvatarURL,
	FieldURL,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
