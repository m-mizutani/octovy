// Code generated by entc, DO NOT EDIT.

package object

const (
	// Label holds the string label denoting the object type in the database.
	Label = "object"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldKey holds the string denoting the key field in the database.
	FieldKey = "key"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// EdgeVulnerabilities holds the string denoting the vulnerabilities edge name in mutations.
	EdgeVulnerabilities = "vulnerabilities"
	// EdgeReport holds the string denoting the report edge name in mutations.
	EdgeReport = "report"
	// Table holds the table name of the object in the database.
	Table = "objects"
	// VulnerabilitiesTable is the table that holds the vulnerabilities relation/edge.
	VulnerabilitiesTable = "vulnerabilities"
	// VulnerabilitiesInverseTable is the table name for the Vulnerability entity.
	// It exists in this package in order to avoid circular dependency with the "vulnerability" package.
	VulnerabilitiesInverseTable = "vulnerabilities"
	// VulnerabilitiesColumn is the table column denoting the vulnerabilities relation/edge.
	VulnerabilitiesColumn = "object_vulnerabilities"
	// ReportTable is the table that holds the report relation/edge. The primary key declared below.
	ReportTable = "report_objects"
	// ReportInverseTable is the table name for the Report entity.
	// It exists in this package in order to avoid circular dependency with the "report" package.
	ReportInverseTable = "reports"
)

// Columns holds all SQL columns for object fields.
var Columns = []string{
	FieldID,
	FieldKey,
	FieldName,
	FieldDescription,
	FieldVersion,
}

var (
	// ReportPrimaryKey and ReportColumn2 are the table columns denoting the
	// primary key for the report relation (M2M).
	ReportPrimaryKey = []string{"report_id", "object_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
