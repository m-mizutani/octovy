name: Build and publish container image

on:
  push:

env:
  TAG_NAME: octovy:${{ github.sha }}
  GITHUB_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/octovy:${{ github.sha }}
  GCP_IMAGE_REPO: gcr.io/octovy/octovy
  GCP_IMAGE_NAME: gcr.io/octovy/octovy:${{ github.sha }}
  GCP_PROJECT_ID: octovy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker image
        run: docker build . -t ${{ env.TAG_NAME }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Rename image
        run: docker tag ${{ env.TAG_NAME }} ${{ env.GITHUB_IMAGE_NAME }}
      - name: Push image
        run: docker push ${{ env.GITHUB_IMAGE_NAME }}
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Pushed to ${{ env.GITHUB_IMAGE_NAME }}"

  gcp:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: GCP Authenticate
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet
      - name: Push Docker image
        run: docker pull ${{ env.GITHUB_IMAGE_NAME }}
      - name: Rename Docker image
        run: docker tag ${{ env.GITHUB_IMAGE_NAME }} ${{ env.GCP_IMAGE_NAME }}
      - name: Push Docker image
        run: docker push ${{ env.GCP_IMAGE_NAME }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Pushed to ${{ env.GCP_IMAGE_NAME }}"

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: extract tag
        id: tag
        run: |
          TAG=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          echo ::set-output name=tag::$TAG
      - name: GCP Authenticate
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet
      - name: Push Docker image
        run: docker pull ${{ env.GITHUB_IMAGE_NAME }}
      - name: Rename Docker image (tag name)
        run: docker tag ${{ env.GITHUB_IMAGE_NAME }} "${{ env.GCP_IMAGE_REPO }}:${{ steps.tag.outputs.tag }}"
      - name: Rename Docker image (latest)
        run: docker tag ${{ env.GITHUB_IMAGE_NAME }} "${{ env.GCP_IMAGE_REPO }}:latest"
      - name: Push Docker image (tag name)
        run: docker push "${{ env.GCP_IMAGE_REPO }}:${{ steps.tag.outputs.tag }}"
      - name: Push Docker image (latest)
        run: docker push "${{ env.GCP_IMAGE_REPO }}:latest"
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Pushed to ${{ env.GCP_IMAGE_REPO }}:${{ steps.tag.outputs.tag }}"
