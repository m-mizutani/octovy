name: Build and publish container image

on:
  push:

env:
  TAG_NAME: octovy:${{ github.sha }}
  GITHUB_IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/octovy
  GITHUB_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/octovy:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          tags: ${{ env.GITHUB_IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Pushed to ${{ env.GITHUB_IMAGE_NAME }}"

  release-ghcr:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: extract tag
        id: tag
        run: |
          TAG=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          echo ::set-output name=tag::$TAG
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull Docker image
        run: docker pull ${{ env.GITHUB_IMAGE_NAME }}
      - name: Rename Docker image (tag name)
        run: docker tag ${{ env.GITHUB_IMAGE_NAME }} "${{ env.GITHUB_IMAGE_REPO }}:${{ steps.tag.outputs.tag }}"
      - name: Rename Docker image (latest)
        run: docker tag ${{ env.GITHUB_IMAGE_NAME }} "${{ env.GITHUB_IMAGE_REPO }}:latest"
      - name: Push Docker image (tag name)
        run: docker push "${{ env.GITHUB_IMAGE_REPO }}:${{ steps.tag.outputs.tag }}"
      - name: Push Docker image (latest)
        run: docker push "${{ env.GITHUB_IMAGE_REPO }}:latest"
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Pushed to ${{ env.GITHUB_IMAGE_REPO }}:${{ steps.tag.outputs.tag }}"
